{
  "experiment_name": "pretrain_s3rec_beauty_test_new",
  "train_epochs_num": 100,
  "dataset": {
    "type": "scientific",
    "path_to_data_dir": "./data",
    "name": "Beauty",
    "max_sequence_length": 50,
    "samplers": {
      "type": "s3rec_pretrain",
      "negative_sampler_type": "random",
      "mask_prob": 0.2
    }
  },
  "dataloader": {
    "train": {
      "type": "torch",
      "batch_size": 256,
      "batch_processor": {
        "type": "basic"
      },
      "drop_last": true,
      "shuffle": true
    },
    "validation": {
      "type": "torch",
      "batch_size": 256,
      "batch_processor": {
        "type": "basic"
      },
      "drop_last": false,
      "shuffle": false
    }
  },
  "model": {
    "type": "s3rec",
    "is_training": false,
    "sequence_prefix": "item",
    "positive_prefix": "positive",
    "negative_prefix": "negative",
    "sequence_segment_prefix": "item_segment",
    "positive_segment_prefix": "positive_segment",
    "negative_segment_prefix": "negative_segment",
    "candidate_prefix": "candidates",
    "embedding_dim": 64,
    "num_heads": 2,
    "num_layers": 2,
    "dim_feedforward": 256,
    "dropout": 0.6,
    "activation": "relu",
    "layer_norm_eps": 1e-9,
    "initializer_range": 0.02
  },
  "optimizer": {
    "type": "basic",
    "optimizer": {
      "type": "adam",
      "lr": 0.001
    }
  },
  "loss": {
    "type": "composite",
    "losses": [
      {
        "type": "s3rec_pretrain",
        "positive_prefix": "positive_representation",
        "negative_prefix": "negative_representation",
        "representation_prefix": "current_representation",
        "output_prefix": "mip_loss",
        "weight": 1.0
      },
      {
        "type": "s3rec_pretrain",
        "positive_prefix": "positive_segment_representation",
        "negative_prefix": "negative_segment_representation",
        "representation_prefix": "current_segment_representation",
        "output_prefix": "sp_loss",
        "weight": 0.0
      }
    ],
    "output_prefix": "loss"
  },
  "callback": {
    "type": "composite",
    "callbacks": [
      {
        "type": "metric",
        "on_step": 1,
        "loss_prefix": "loss"
      }
    ]
  }
}
